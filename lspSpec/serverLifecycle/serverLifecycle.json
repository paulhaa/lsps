{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": {
    "InitializeParams": {
      "additionalProperties": false,
      "properties": {
        "capabilities": {
          "$ref": "#/definitions/ClientCapabilities",
          "description": "The capabilities provided by the client (editor or tool)"
        },
        "clientInfo": {
          "additionalProperties": false,
          "description": "Information about the client",
          "properties": {
            "name": {
              "description": "The name of the client as defined by the client.",
              "type": "string"
            },
            "version": {
              "description": "The client's version as defined by the client.",
              "type": "string"
            }
          },
          "required": [
            "name"
          ],
          "type": "object"
        },
        "initializationOptions": {
          "$ref": "../baseProtocol/baseProtocol.json#/definitions/LSPAny",
          "description": "User provided initialization options."
        },
        "locale": {
          "description": "The locale the client is currently showing the user interface in. This must not necessarily be the locale of the operating system.\n\nUses IETF language tags as the value's syntax (See https://en.wikipedia.org/wiki/IETF_language_tag)",
          "type": "string"
        },
        "processId": {
          "anyOf": [
            {
              "$ref": "../baseProtocol/baseProtocol.json#/definitions/integer"
            },
            {
              "type": "null"
            }
          ],
          "description": "The process Id of the parent process that started the server. Is null if the process has not been started by another process. If the parent process is not alive then the server should exit (see exit notification) its process."
        },
        "rootPath": {
          "deprecated": "in favour of `rootUri`.",
          "description": "The rootPath of the workspace. Is null if no folder is open.",
          "type": [
            "string",
            "null"
          ]
        },
        "rootUri": {
          "anyOf": [
            {
              "$ref": "../basicStructures/basicStructures.json#/definitions/DocumentUri"
            },
            {
              "type": "null"
            }
          ],
          "deprecated": "in favour of `workspaceFolders`",
          "description": "The rootUri of the workspace. Is null if no folder is open. If both `rootPath` and `rootUri` are set `rootUri` wins."
        },
        "trace": {
          "$ref": "../basicStructures/basicStructures.json#/definitions/TraceValue",
          "description": "The initial trace setting. If omitted trace is disabled ('off')."
        },
        "workDoneToken": {
          "$ref": "../baseProtocol/baseProtocol.json#/definitions/ProgressToken",
          "description": "An optional token that a server can use to report work done progress."
        },
        "workspaceFolders": {
          "anyOf": [
            {
              "items": {
                "$ref": "../workspaceFeatures/workspaceFeatures.json#/definitions/WorkspaceFolder"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "description": "The workspace folders configured in the client when the server starts. This property is only available if the client supports workspace folders. It can be `null` if the client supports workspace folders but none are configured."
        }
      },
      "required": [
        "processId",
        "rootUri",
        "capabilities"
      ],
      "type": "object"
    },
    "TextDocumentClientCapabilities": {
      "additionalProperties": false,
      "description": "Text document specific client capabilities.",
      "properties": {
        "callHierarchy": {
          "$ref": "../languageFeatures/languageFeatures.json#/definitions/CallHierarchyClientCapabilities",
          "description": "Capabilities specific to the various call hierarchy requests."
        },
        "codeAction": {
          "$ref": "../languageFeatures/languageFeatures.json#/definitions/CodeActionClientCapabilities",
          "description": "Capabilities specific to the `textDocument/codeAction` request."
        },
        "codeLens": {
          "$ref": "../languageFeatures/languageFeatures.json#/definitions/CodeLensClientCapabilities",
          "description": "Capabilities specific to the `textDocument/codeLens` request."
        },
        "colorProvider": {
          "$ref": "../languageFeatures/languageFeatures.json#/definitions/DocumentColorClientCapabilities",
          "description": "Capabilities specific to the `textDocument/documentColor` and the `textDocument/colorPresentation` request."
        },
        "completion": {
          "$ref": "../languageFeatures/languageFeatures.json#/definitions/CompletionClientCapabilities",
          "description": "Capabilities specific to the `textDocument/completion` request."
        },
        "declaration": {
          "$ref": "../languageFeatures/languageFeatures.json#/definitions/DeclarationClientCapabilities",
          "description": "Capabilities specific to the `textDocument/declaration` request."
        },
        "definition": {
          "$ref": "../languageFeatures/languageFeatures.json#/definitions/DefinitionClientCapabilities",
          "description": "Capabilities specific to the `textDocument/definition` request."
        },
        "diagnostic": {
          "$ref": "../languageFeatures/languageFeatures.json#/definitions/DiagnosticClientCapabilities",
          "description": "Capabilities specific to the diagnostic pull model."
        },
        "documentHighlight": {
          "$ref": "../languageFeatures/languageFeatures.json#/definitions/DocumentHighlightClientCapabilities",
          "description": "Capabilities specific to the `textDocument/documentHighlight` request."
        },
        "documentLink": {
          "$ref": "../languageFeatures/languageFeatures.json#/definitions/DocumentLinkClientCapabilities",
          "description": "Capabilities specific to the `textDocument/documentLink` request."
        },
        "documentSymbol": {
          "$ref": "../languageFeatures/languageFeatures.json#/definitions/DocumentSymbolClientCapabilities",
          "description": "Capabilities specific to the `textDocument/documentSymbol` request."
        },
        "foldingRange": {
          "$ref": "../languageFeatures/languageFeatures.json#/definitions/FoldingRangeClientCapabilities",
          "description": "Capabilities specific to the `textDocument/foldingRange` request."
        },
        "formatting": {
          "$ref": "../languageFeatures/languageFeatures.json#/definitions/DocumentFormattingClientCapabilities",
          "description": "Capabilities specific to the `textDocument/formatting` request."
        },
        "hover": {
          "$ref": "../languageFeatures/languageFeatures.json#/definitions/HoverClientCapabilities",
          "description": "Capabilities specific to the `textDocument/hover` request."
        },
        "implementation": {
          "$ref": "../languageFeatures/languageFeatures.json#/definitions/ImplementationClientCapabilities",
          "description": "Capabilities specific to the `textDocument/implementation` request."
        },
        "inlayHint": {
          "$ref": "../languageFeatures/languageFeatures.json#/definitions/InlayHintClientCapabilities",
          "description": "Capabilities specific to the `textDocument/inlayHint` request."
        },
        "inlineValue": {
          "$ref": "../languageFeatures/languageFeatures.json#/definitions/InlineValueClientCapabilities",
          "description": "Capabilities specific to the `textDocument/inlineValue` request."
        },
        "linkedEditingRange": {
          "$ref": "../languageFeatures/languageFeatures.json#/definitions/LinkedEditingRangeClientCapabilities",
          "description": "Capabilities specific to the `textDocument/linkedEditingRange` request."
        },
        "moniker": {
          "$ref": "../languageFeatures/languageFeatures.json#/definitions/MonikerClientCapabilities",
          "description": "Capabilities specific to the `textDocument/moniker` request."
        },
        "onTypeFormatting": {
          "$ref": "../languageFeatures/languageFeatures.json#/definitions/DocumentOnTypeFormattingClientCapabilities",
          "description": "request. Capabilities specific to the `textDocument/onTypeFormatting` request."
        },
        "publishDiagnostics": {
          "$ref": "../languageFeatures/languageFeatures.json#/definitions/PublishDiagnosticsClientCapabilities",
          "description": "Capabilities specific to the `textDocument/publishDiagnostics` notification."
        },
        "rangeFormatting": {
          "$ref": "../languageFeatures/languageFeatures.json#/definitions/DocumentRangeFormattingClientCapabilities",
          "description": "Capabilities specific to the `textDocument/rangeFormatting` request."
        },
        "references": {
          "$ref": "../languageFeatures/languageFeatures.json#/definitions/ReferenceClientCapabilities",
          "description": "Capabilities specific to the `textDocument/references` request."
        },
        "rename": {
          "$ref": "../languageFeatures/languageFeatures.json#/definitions/RenameClientCapabilities",
          "description": "Capabilities specific to the `textDocument/rename` request."
        },
        "selectionRange": {
          "$ref": "../languageFeatures/languageFeatures.json#/definitions/SelectionRangeClientCapabilities",
          "description": "Capabilities specific to the `textDocument/selectionRange` request."
        },
        "semanticTokens": {
          "$ref": "../languageFeatures/languageFeatures.json#/definitions/SemanticTokensClientCapabilities",
          "description": "Capabilities specific to the various semantic token requests."
        },
        "signatureHelp": {
          "$ref": "../languageFeatures/languageFeatures.json#/definitions/SignatureHelpClientCapabilities",
          "description": "Capabilities specific to the `textDocument/signatureHelp` request."
        },
        "synchronization": {
          "$ref": "../documentSynchronization/documentSynchronization.json#/definitions/TextDocumentSyncClientCapabilities"
        },
        "typeDefinition": {
          "$ref": "../languageFeatures/languageFeatures.json#/definitions/TypeDefinitionClientCapabilities",
          "description": "Capabilities specific to the `textDocument/typeDefinition` request."
        },
        "typeHierarchy": {
          "$ref": "../languageFeatures/languageFeatures.json#/definitions/TypeHierarchyClientCapabilities",
          "description": "Capabilities specific to the various type hierarchy requests."
        }
      },
      "type": "object"
    },
    "NotebookDocumentClientCapabilities": {
      "additionalProperties": false,
      "description": "Capabilities specific to the notebook document support.",
      "properties": {
        "synchronization": {
          "$ref": "../documentSynchronization/documentSynchronization.json#/definitions/NotebookDocumentSyncClientCapabilities",
          "description": "Capabilities specific to notebook document synchronization"
        }
      },
      "required": [
        "synchronization"
      ],
      "type": "object"
    },
    "ClientCapabilities": {
      "additionalProperties": false,
      "properties": {
        "experimental": {
          "$ref": "../baseProtocol/baseProtocol.json#/definitions/LSPAny",
          "description": "Experimental client capabilities."
        },
        "general": {
          "additionalProperties": false,
          "description": "General client capabilities.",
          "properties": {
            "markdown": {
              "$ref": "../basicStructures/basicStructures.json#/definitions/MarkdownClientCapabilities",
              "description": "Client capabilities specific to the client's markdown parser."
            },
            "positionEncodings": {
              "description": "The position encodings supported by the client. Client and server have to agree on the same position encoding to ensure that offsets (e.g. character position in a line) are interpreted the same on both side.\n\nTo keep the protocol backwards compatible the following applies: if the value 'utf-16' is missing from the array of position encodings servers can assume that the client supports UTF-16. UTF-16 is therefore a mandatory encoding.\n\nIf omitted it defaults to ['utf-16'].\n\nImplementation considerations: since the conversion from one encoding into another requires the content of the file / line the conversion is best done where the file is read which is usually on the server side.",
              "items": {
                "$ref": "../basicStructures/basicStructures.json#/definitions/PositionEncodingKind"
              },
              "type": "array"
            },
            "regularExpressions": {
              "$ref": "../basicStructures/basicStructures.json#/definitions/RegularExpressionsClientCapabilities",
              "description": "Client capabilities specific to regular expressions."
            },
            "staleRequestSupport": {
              "additionalProperties": false,
              "description": "Client capability that signals how the client handles stale requests (e.g. a request for which the client will not process the response anymore since the information is outdated).",
              "properties": {
                "cancel": {
                  "description": "The client will actively cancel the request.",
                  "type": "boolean"
                },
                "retryOnContentModified": {
                  "description": "The list of requests for which the client will retry the request if it receives a response with error code `ContentModified``",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "required": [
                "cancel",
                "retryOnContentModified"
              ],
              "type": "object"
            }
          },
          "type": "object"
        },
        "notebookDocument": {
          "$ref": "#/definitions/NotebookDocumentClientCapabilities",
          "description": "Capabilities specific to the notebook document support."
        },
        "textDocument": {
          "$ref": "#/definitions/TextDocumentClientCapabilities",
          "description": "Text document specific client capabilities."
        },
        "window": {
          "additionalProperties": false,
          "description": "Window specific client capabilities.",
          "properties": {
            "showDocument": {
              "$ref": "../windowFeatures/windowFeatures.json#/definitions/ShowDocumentClientCapabilities",
              "description": "Client capabilities for the show document request."
            },
            "showMessage": {
              "$ref": "../windowFeatures/windowFeatures.json#/definitions/ShowMessageRequestClientCapabilities",
              "description": "Capabilities specific to the showMessage request"
            },
            "workDoneProgress": {
              "description": "It indicates whether the client supports server initiated progress using the `window/workDoneProgress/create` request.\n\nThe capability also controls Whether client supports handling of progress notifications. If set servers are allowed to report a `workDoneProgress` property in the request specific server capabilities.",
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "workspace": {
          "additionalProperties": false,
          "description": "Workspace specific client capabilities.",
          "title": "",
          "properties": {
            "applyEdit": {
              "description": "The client supports applying batch edits to the workspace by supporting the request 'workspace/applyEdit'",
              "type": "boolean"
            },
            "codeLens": {
              "$ref": "../languageFeatures/languageFeatures.json#/definitions/CodeLensWorkspaceClientCapabilities",
              "description": "Capabilities specific to the code lens requests scoped to the workspace."
            },
            "configuration": {
              "description": "The client supports `workspace/configuration` requests.",
              "type": "boolean"
            },
            "diagnostics": {
              "$ref": "../languageFeatures/languageFeatures.json#/definitions/DiagnosticWorkspaceClientCapabilities",
              "description": "Client workspace capabilities specific to diagnostics."
            },
            "didChangeConfiguration": {
              "$ref": "../workspaceFeatures/workspaceFeatures.json#/definitions/DidChangeConfigurationClientCapabilities",
              "description": "Capabilities specific to the `workspace/didChangeConfiguration` notification."
            },
            "didChangeWatchedFiles": {
              "$ref": "../workspaceFeatures/workspaceFeatures.json#/definitions/DidChangeWatchedFilesClientCapabilities",
              "description": "Capabilities specific to the `workspace/didChangeWatchedFiles` notification."
            },
            "executeCommand": {
              "$ref": "../workspaceFeatures/workspaceFeatures.json#/definitions/ExecuteCommandClientCapabilities",
              "description": "Capabilities specific to the `workspace/executeCommand` request."
            },
            "fileOperations": {
              "title": "clientFileOperations",
              "additionalProperties": false,
              "description": "The client has support for file requests/notifications.",
              "properties": {
                "didCreate": {
                  "description": "The client has support for sending didCreateFiles notifications.",
                  "type": "boolean"
                },
                "didDelete": {
                  "description": "The client has support for sending didDeleteFiles notifications.",
                  "type": "boolean"
                },
                "didRename": {
                  "description": "The client has support for sending didRenameFiles notifications.",
                  "type": "boolean"
                },
                "dynamicRegistration": {
                  "description": "Whether the client supports dynamic registration for file requests/notifications.",
                  "type": "boolean"
                },
                "willCreate": {
                  "description": "The client has support for sending willCreateFiles requests.",
                  "type": "boolean"
                },
                "willDelete": {
                  "description": "The client has support for sending willDeleteFiles requests.",
                  "type": "boolean"
                },
                "willRename": {
                  "description": "The client has support for sending willRenameFiles requests.",
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "inlayHint": {
              "$ref": "../languageFeatures/languageFeatures.json#/definitions/InlayHintWorkspaceClientCapabilities",
              "description": "Client workspace capabilities specific to inlay hints."
            },
            "inlineValue": {
              "$ref": "../languageFeatures/languageFeatures.json#/definitions/InlineValueWorkspaceClientCapabilities",
              "description": "Client workspace capabilities specific to inline values."
            },
            "semanticTokens": {
              "$ref": "../languageFeatures/languageFeatures.json#/definitions/SemanticTokensWorkspaceClientCapabilities",
              "description": "Capabilities specific to the semantic token requests scoped to the workspace."
            },
            "symbol": {
              "$ref": "../workspaceFeatures/workspaceFeatures.json#/definitions/WorkspaceSymbolClientCapabilities",
              "description": "Capabilities specific to the `workspace/symbol` request."
            },
            "workspaceEdit": {
              "$ref": "../basicStructures/basicStructures.json#/definitions/WorkspaceEditClientCapabilities",
              "description": "Capabilities specific to `WorkspaceEdit`s"
            },
            "workspaceFolders": {
              "description": "The client has support for workspace folders.",
              "type": "boolean"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "InitializeResult": {
      "additionalProperties": false,
      "properties": {
        "capabilities": {
          "$ref": "#/definitions/ServerCapabilities",
          "description": "The capabilities the language server provides."
        },
        "serverInfo": {
          "additionalProperties": false,
          "description": "Information about the server.",
          "properties": {
            "name": {
              "description": "The name of the server as defined by the server.",
              "type": "string"
            },
            "version": {
              "description": "The server's version as defined by the server.",
              "type": "string"
            }
          },
          "required": [
            "name"
          ],
          "type": "object"
        }
      },
      "required": [
        "capabilities"
      ],
      "type": "object"
    },
    "InitializeErrorCodes": {
      "enum": [
        1
      ],
      "description": "Known error codes for an `InitializeErrorCodes`;",
      "type": "number"
    },
    "InitializeError": {
      "additionalProperties": false,
      "properties": {
        "retry": {
          "description": "Indicates whether the client execute the following retry logic: (1) show the message provided by the ResponseError to the user (2) user selects retry or cancel (3) if user selected retry the initialize method is sent again.",
          "type": "boolean"
        }
      },
      "required": [
        "retry"
      ],
      "type": "object"
    },
    "ServerCapabilities": {
      "additionalProperties": false,
      "properties": {
        "callHierarchyProvider": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "../languageFeatures/languageFeatures.json#/definitions/CallHierarchyOptions"
            },
            {
              "$ref": "../languageFeatures/languageFeatures.json#/definitions/CallHierarchyRegistrationOptions"
            }
          ],
          "description": "The server provides call hierarchy support."
        },
        "codeActionProvider": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "../languageFeatures/languageFeatures.json#/definitions/CodeActionOptions"
            }
          ],
          "description": "The server provides code actions. The `CodeActionOptions` return type is only valid if the client signals code action literal support via the property `textDocument.codeAction.codeActionLiteralSupport`."
        },
        "codeLensProvider": {
          "$ref": "../languageFeatures/languageFeatures.json#/definitions/CodeLensOptions",
          "description": "The server provides code lens."
        },
        "colorProvider": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "../languageFeatures/languageFeatures.json#/definitions/DocumentColorOptions"
            },
            {
              "$ref": "../languageFeatures/languageFeatures.json#/definitions/DocumentColorRegistrationOptions"
            }
          ],
          "description": "The server provides color provider support."
        },
        "completionProvider": {
          "$ref": "../languageFeatures/languageFeatures.json#/definitions/CompletionOptions",
          "description": "The server provides completion support."
        },
        "declarationProvider": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "../languageFeatures/languageFeatures.json#/definitions/DeclarationOptions"
            },
            {
              "$ref": "../languageFeatures/languageFeatures.json#/definitions/DeclarationRegistrationOptions"
            }
          ],
          "description": "The server provides go to declaration support."
        },
        "definitionProvider": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "../languageFeatures/languageFeatures.json#/definitions/DefinitionOptions"
            }
          ],
          "description": "The server provides goto definition support."
        },
        "diagnosticProvider": {
          "anyOf": [
            {
              "$ref": "../languageFeatures/languageFeatures.json#/definitions/DiagnosticOptions"
            },
            {
              "$ref": "../languageFeatures/languageFeatures.json#/definitions/DiagnosticRegistrationOptions"
            }
          ],
          "description": "The server has support for pull model diagnostics."
        },
        "documentFormattingProvider": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "../languageFeatures/languageFeatures.json#/definitions/DocumentFormattingOptions"
            }
          ],
          "description": "The server provides document formatting."
        },
        "documentHighlightProvider": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "../languageFeatures/languageFeatures.json#/definitions/DocumentHighlightOptions"
            }
          ],
          "description": "The server provides document highlight support."
        },
        "documentLinkProvider": {
          "$ref": "../languageFeatures/languageFeatures.json#/definitions/DocumentLinkOptions",
          "description": "The server provides document link support."
        },
        "documentOnTypeFormattingProvider": {
          "$ref": "../languageFeatures/languageFeatures.json#/definitions/DocumentOnTypeFormattingOptions",
          "description": "The server provides document formatting on typing."
        },
        "documentRangeFormattingProvider": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "../languageFeatures/languageFeatures.json#/definitions/DocumentRangeFormattingOptions"
            }
          ],
          "description": "The server provides document range formatting."
        },
        "documentSymbolProvider": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "../languageFeatures/languageFeatures.json#/definitions/DocumentSymbolOptions"
            }
          ],
          "description": "The server provides document symbol support."
        },
        "executeCommandProvider": {
          "$ref": "../workspaceFeatures/workspaceFeatures.json#/definitions/ExecuteCommandOptions",
          "description": "The server provides execute command support."
        },
        "experimental": {
          "$ref": "../baseProtocol/baseProtocol.json#/definitions/LSPAny",
          "description": "Experimental server capabilities."
        },
        "foldingRangeProvider": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "../languageFeatures/languageFeatures.json#/definitions/FoldingRangeOptions"
            },
            {
              "$ref": "../languageFeatures/languageFeatures.json#/definitions/FoldingRangeRegistrationOptions"
            }
          ],
          "description": "The server provides folding provider support."
        },
        "hoverProvider": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "../languageFeatures/languageFeatures.json#/definitions/HoverOptions"
            }
          ],
          "description": "The server provides hover support."
        },
        "implementationProvider": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "../languageFeatures/languageFeatures.json#/definitions/ImplementationOptions"
            },
            {
              "$ref": "../languageFeatures/languageFeatures.json#/definitions/ImplementationRegistrationOptions"
            }
          ],
          "description": "The server provides goto implementation support."
        },
        "inlayHintProvider": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "../languageFeatures/languageFeatures.json#/definitions/InlayHintOptions"
            },
            {
              "$ref": "../languageFeatures/languageFeatures.json#/definitions/InlayHintRegistrationOptions"
            }
          ],
          "description": "The server provides inlay hints."
        },
        "inlineValueProvider": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "../languageFeatures/languageFeatures.json#/definitions/InlineValueOptions"
            },
            {
              "$ref": "../languageFeatures/languageFeatures.json#/definitions/InlineValueRegistrationOptions"
            }
          ],
          "description": "The server provides inline values."
        },
        "linkedEditingRangeProvider": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "../languageFeatures/languageFeatures.json#/definitions/LinkedEditingRangeOptions"
            },
            {
              "$ref": "../languageFeatures/languageFeatures.json#/definitions/LinkedEditingRangeRegistrationOptions"
            }
          ],
          "description": "The server provides linked editing range support."
        },
        "monikerProvider": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "../languageFeatures/languageFeatures.json#/definitions/MonikerOptions"
            },
            {
              "$ref": "../languageFeatures/languageFeatures.json#/definitions/MonikerRegistrationOptions"
            }
          ],
          "description": "Whether server provides moniker support."
        },
        "notebookDocumentSync": {
          "anyOf": [
            {
              "$ref": "../documentSynchronization/documentSynchronization.json#/definitions/NotebookDocumentSyncOptions"
            },
            {
              "$ref": "../documentSynchronization/documentSynchronization.json#/definitions/NotebookDocumentSyncRegistrationOptions"
            }
          ],
          "description": "Defines how notebook documents are synced."
        },
        "positionEncoding": {
          "$ref": "../basicStructures/basicStructures.json#/definitions/PositionEncodingKind",
          "description": "The position encoding the server picked from the encodings offered by the client via the client capability `general.positionEncodings`.\n\nIf the client didn't provide any position encodings the only valid value that a server can return is 'utf-16'.\n\nIf omitted it defaults to 'utf-16'."
        },
        "referencesProvider": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "../languageFeatures/languageFeatures.json#/definitions/ReferenceOptions"
            }
          ],
          "description": "The server provides find references support."
        },
        "renameProvider": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "../languageFeatures/languageFeatures.json#/definitions/RenameOptions"
            }
          ],
          "description": "The server provides rename support. RenameOptions may only be specified if the client states that it supports `prepareSupport` in its initial `initialize` request."
        },
        "selectionRangeProvider": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "../languageFeatures/languageFeatures.json#/definitions/SelectionRangeOptions"
            },
            {
              "$ref": "../languageFeatures/languageFeatures.json#/definitions/SelectionRangeRegistrationOptions"
            }
          ],
          "description": "The server provides selection range support."
        },
        "semanticTokensProvider": {
          "anyOf": [
            {
              "$ref": "../languageFeatures/languageFeatures.json#/definitions/SemanticTokensOptions"
            },
            {
              "$ref": "../languageFeatures/languageFeatures.json#/definitions/SemanticTokensRegistrationOptions"
            }
          ],
          "description": "The server provides semantic tokens support."
        },
        "signatureHelpProvider": {
          "$ref": "../languageFeatures/languageFeatures.json#/definitions/SignatureHelpOptions",
          "description": "The server provides signature help support."
        },
        "textDocumentSync": {
          "anyOf": [
            {
              "$ref": "../documentSynchronization/documentSynchronization.json#/definitions/TextDocumentSyncOptions"
            },
            {
              "$ref": "../documentSynchronization/documentSynchronization.json#/definitions/TextDocumentSyncKind"
            }
          ],
          "description": "Defines how text documents are synced. Is either a detailed structure defining each notification or for backwards compatibility the TextDocumentSyncKind number. If omitted it defaults to `TextDocumentSyncKind.None`."
        },
        "typeDefinitionProvider": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "../languageFeatures/languageFeatures.json#/definitions/TypeDefinitionOptions"
            },
            {
              "$ref": "../languageFeatures/languageFeatures.json#/definitions/TypeDefinitionRegistrationOptions"
            }
          ],
          "description": "The server provides goto type definition support."
        },
        "typeHierarchyProvider": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "../languageFeatures/languageFeatures.json#/definitions/TypeHierarchyOptions"
            },
            {
              "$ref": "../languageFeatures/languageFeatures.json#/definitions/TypeHierarchyRegistrationOptions"
            }
          ],
          "description": "The server provides type hierarchy support."
        },
        "workspace": {
          "additionalProperties": false,
          "description": "Workspace specific server capabilities",
          "properties": {
            "fileOperations": {
              "title": "serverFileOperations",
              "additionalProperties": false,
              "description": "The server is interested in file notifications/requests.",
              "properties": {
                "didCreate": {
                  "$ref": "../workspaceFeatures/workspaceFeatures.json#/definitions/FileOperationRegistrationOptions",
                  "description": "The server is interested in receiving didCreateFiles notifications."
                },
                "didDelete": {
                  "$ref": "../workspaceFeatures/workspaceFeatures.json#/definitions/FileOperationRegistrationOptions",
                  "description": "The server is interested in receiving didDeleteFiles file notifications."
                },
                "didRename": {
                  "$ref": "../workspaceFeatures/workspaceFeatures.json#/definitions/FileOperationRegistrationOptions",
                  "description": "The server is interested in receiving didRenameFiles notifications."
                },
                "willCreate": {
                  "$ref": "../workspaceFeatures/workspaceFeatures.json#/definitions/FileOperationRegistrationOptions",
                  "description": "The server is interested in receiving willCreateFiles requests."
                },
                "willDelete": {
                  "$ref": "../workspaceFeatures/workspaceFeatures.json#/definitions/FileOperationRegistrationOptions",
                  "description": "The server is interested in receiving willDeleteFiles file requests."
                },
                "willRename": {
                  "$ref": "../workspaceFeatures/workspaceFeatures.json#/definitions/FileOperationRegistrationOptions",
                  "description": "The server is interested in receiving willRenameFiles requests."
                }
              },
              "type": "object"
            },
            "workspaceFolders": {
              "$ref": "../workspaceFeatures/workspaceFeatures.json#/definitions/WorkspaceFoldersServerCapabilities",
              "description": "The server supports workspace folder."
            }
          },
          "type": "object"
        },
        "workspaceSymbolProvider": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "../workspaceFeatures/workspaceFeatures.json#/definitions/WorkspaceSymbolOptions"
            }
          ],
          "description": "The server provides workspace symbol support."
        }
      },
      "type": "object"
    },
    "InitializedParams": {
      "additionalProperties": false,
      "type": "object"
    },
    "Registration": {
      "additionalProperties": false,
      "description": "General parameters to register for a capability.",
      "properties": {
        "id": {
          "description": "The id used to register the request. The id can be used to deregister the request again.",
          "type": "string"
        },
        "method": {
          "description": "The method / capability to register for.",
          "type": "string"
        },
        "registerOptions": {
          "$ref": "../baseProtocol/baseProtocol.json#/definitions/LSPAny",
          "description": "Options necessary for the registration."
        }
      },
      "required": [
        "id",
        "method"
      ],
      "type": "object"
    },
    "RegistrationParams": {
      "additionalProperties": false,
      "properties": {
        "registrations": {
          "items": {
            "$ref": "#/definitions/Registration"
          },
          "type": "array"
        }
      },
      "required": [
        "registrations"
      ],
      "type": "object"
    },
    "StaticRegistrationOptions": {
      "additionalProperties": false,
      "description": "Static registration options to be returned in the initialize request.",
      "properties": {
        "id": {
          "description": "The id used to register the request. The id can be used to deregister the request again. See also Registration#id.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "TextDocumentRegistrationOptions": {
      "additionalProperties": false,
      "description": "General text document registration options.",
      "properties": {
        "documentSelector": {
          "anyOf": [
            {
              "$ref": "../basicStructures/basicStructures.json#/definitions/DocumentSelector"
            },
            {
              "type": "null"
            }
          ],
          "description": "A document selector to identify the scope of the registration. If set to null the document selector provided on the client side will be used."
        }
      },
      "required": [
        "documentSelector"
      ],
      "type": "object"
    },
    "Unregistration": {
      "additionalProperties": false,
      "description": "General parameters to unregister a capability.",
      "properties": {
        "id": {
          "description": "The id used to unregister the request or notification. Usually an id provided during the register request.",
          "type": "string"
        },
        "method": {
          "description": "The method / capability to unregister for.",
          "type": "string"
        }
      },
      "required": [
        "id",
        "method"
      ],
      "type": "object"
    },
    "UnregistrationParams": {
      "additionalProperties": false,
      "properties": {
        "unregisterations": {
          "items": {
            "$ref": "#/definitions/Unregistration"
          },
          "type": "array"
        }
      },
      "required": [
        "unregisterations"
      ],
      "type": "object"
    },
    "SetTraceParams": {
      "additionalProperties": false,
      "description": "{ \t\"method\": \"client/unregisterCapability\", \t\"params\": { \t\t\"unregisterations\": [ \t\t\t{ \t\t\t\t\"id\": \"79eee87c-c409-4664-8102-e03263673f6f\", \t\t\t\t\"method\": \"textDocument/willSaveWaitUntil\" \t\t\t} \t\t] \t} }",
      "properties": {
        "value": {
          "$ref": "../basicStructures/basicStructures.json#/definitions/TraceValue",
          "description": "The new value that should be assigned to the trace setting."
        }
      },
      "required": [
        "value"
      ],
      "type": "object"
    },
    "LogTraceParams": {
      "additionalProperties": false,
      "properties": {
        "message": {
          "description": "The message to be logged.",
          "type": "string"
        },
        "verbose": {
          "description": "Additional information that can be computed if the `trace` configuration is set to `'verbose'`",
          "type": "string"
        }
      },
      "required": [
        "message"
      ],
      "type": "object"
    }
  }
}
